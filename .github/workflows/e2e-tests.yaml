name: E2E Workflow

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  run-tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - test_dir: tests/basic
            test_name: basic
            dotnet: true
 #         - test_dir: tests/slice
 #           test_name: slice
 #           dotnet: true
 #         - test_dir: tests/complex
 #           test_name: complex
 #           dotnet: true
 #         - test_dir: iceberg
 #           test_name: iceberg
 #           dotnet: true
 #         - test_dir: lib
 #           test_name: lib
 #           dotnet: true
 #         - test_dir: uql
 #           test_name: uql
 #           dotnet: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23

      - name: Install GCC/G++
        run: sudo apt-get install -y g++

      - name: Setup .NET SDK
        if: matrix.dotnet == true
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: Run go generate
        working-directory: ulc
        run: go generate ./...

      - name: Run Go application
        working-directory: ulc
        run: go run . --source=./../${{ matrix.test_dir }} --output=${{ matrix.test_name }}

      - name: Compile C++ output
        if: matrix.test_dir != 'iceberg' && matrix.test_dir != 'lib'
        working-directory: ulc
        run: g++ -std=c++17 "${{ matrix.test_name }}.cpp"

      - name: Setup .NET project
        if: matrix.dotnet == true
        run: |
          mkdir -p dotnet_project/app
          dotnet new console --output dotnet_project/app

      - name: Move ${{ matrix.test_name }}.cs
        if: matrix.dotnet == true
        run: mv ulc/${{ matrix.test_name }}.cs dotnet_project/app/Program.cs

      - name: Build .NET ${{ matrix.test_name }}.cs
        if: matrix.dotnet == true
        working-directory: dotnet_project/app
        run: dotnet build

      - name: Cleanup .NET project
        if: matrix.dotnet == true
        run: rm -rf dotnet_project

      - name: Cleanup ${{ matrix.test_name }}.cpp
        working-directory: ulc
        run: rm -f "${{ matrix.test_name }}.cpp"
