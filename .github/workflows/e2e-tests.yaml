name: E2E Workflow

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  run-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23

      - name: Install GCC/G++
        run: sudo apt-get install -y g++

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: Run tests sequentially
        run: |
          tests=(
            "tests/basic basic true"
            "tests/slice slice true"
            "tests/complex complex true"
            "iceberg iceberg true"
            "lib lib true"
            "uql uql false"
          )

          for test_case in "${tests[@]}"; do
            read test_dir test_name dotnet_enabled <<< "$test_case"

            echo "▶️ Running: $test_name"

            echo "🔧 go generate"
            (cd ulc && go generate ./...)

            echo "🚀 go run"
            (cd ulc && go run . --source=./../$test_dir --output=$test_name)

            if [[ "$test_dir" != "iceberg" && "$test_dir" != "lib" ]]; then
              echo "⚙️ C++ compile"
              (cd ulc && g++ -std=c++17 $test_name.cpp)
            fi

            if [[ "$dotnet_enabled" == "true" ]]; then
              echo "🧱 .NET setup"
              mkdir -p dotnet_project/app
              dotnet new console --output dotnet_project/app
              mv ulc/$test_name.cs dotnet_project/app/Program.cs
              (cd dotnet_project/app && dotnet build)
              rm -rf dotnet_project
            fi

            echo "🧹 Cleanup"
            rm -f ulc/$test_name.cpp
            echo "✅ Done with: $test_name"
          done
